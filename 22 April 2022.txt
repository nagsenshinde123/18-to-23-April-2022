Q.1)  Create a linked list and add the following elements to it - 2,4,1,3,8,5
      Search for the number 3 and display ts index

      Output -> Found at 4th position

      public class SearchLinkedList {  
    public Node head = null;  
    public Node tail = null;  
      
    public void addNode(int data) {  
        Node newNode = new Node(data);  
          
        if(head == null) {  
            head = newNode;  
            tail = newNode;  
        }  
        else {  
            tail.next = newNode;  
            tail = newNode;  
        }  
    }  
      
    public void searchNode(int data) {  
        Node current = head;  
        int i = 1;  
        boolean flag = false;  
          
        if(head == null) {  
            System.out.println("List is empty");  
        }  
        else {  
            while(current != null) {  
                if(current.data == data) {  
                    flag = true;  
                    break;  
                }  
                i++;  
                current = current.next;  
            }  
        }  
        if(flag)  
             System.out.println("Found at "+i+"th position");  
        else  
             System.out.println("Element is not present in the list");  
    }  
      
    public static void main(String[] args) {  
          
        SearchLinkedList sList = new SearchLinkedList();  
          
        sList.addNode(2);  
        sList.addNode(4);  
        sList.addNode(1);  
        sList.addNode(3); 
        sList.addNode(8); 
        sList.addNode(5); 
          
        sList.searchNode(3);  
         
    }  
}  

----------------------------------------------***---------------------------------------------

Q.2) Create a liked list and add the following elements to it - 2,4,1,3,8,5.
     Add the element 20 at the end 

     Output - 2,4,1,3,8,5,20"

     public class AddLastElement {
	 
	   Node head;
	  

	   public void addLast(int data) {
	       Node newNode = new Node(data);
	 
	       if(head == null) {
	           head = newNode;
	           return;
	       }
	 
	       Node lastNode = head;
	       while(lastNode.next != null) {
	           lastNode = lastNode.next;
	       }
	 
	       lastNode.next = newNode;
	   }
	 
	   public void printList() {
	       Node currNode = head;
	 
	       while(currNode != null) {
	           System.out.print(currNode.data+" ");
	           currNode = currNode.next;
	       }
	 
	       System.out.println();
	   }
	   
	   public static void main(String args[]) {
	       AddLastElement list = new AddLastElement();
	       list.addLast(2);//2,4,1,3,8,5.
	       list.addLast(4);
	       list.addLast(1);
	       list.addLast(3);
	       list.addLast(8);
	       list.addLast(5);
	       System.out.println("Before Add");
	       list.printList();
	       System.out.println("After Add");
	       list.addLast(20);
	       list.printList();
	 
	   }
	}



----------------------------------------------***---------------------------------------------